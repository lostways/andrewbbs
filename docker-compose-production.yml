version: '3'

volumes:
#  postgres_data_prod:
  uwsgi_data:
  web_static:

services:
  nginx:
    container_name: andrewbbs-nginx-prod
    image: andrewbbs/nginx:prod
    build:
      context: .
      args:
        - NGINX_HOST=${NGINX_HOST:-localhost}
        - SSL_CERTIFICATE=${SSL_CERTIFICATE:-./docker/production/nginx/ssl/localhost.crt}
        - SSL_CERTIFICATE_KEY=${SSL_CERTIFICATE_KEY:-./docker/production/nginx/ssl/localhost.key}
      dockerfile: ./docker/production/nginx/Dockerfile
    restart: always
    volumes:
      - uwsgi_data:/tmp/uwsgi/
      - web_static:/var/www/mysite/assets/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
  
  app:
    container_name: andrewbbs-prod
    image: andrewbbs/app:prod
    build:
      context: .
      dockerfile: ./docker/production/django/Dockerfile
    restart: always
    env_file:
      - ./.envs/production/.env
    volumes:
      - uwsgi_data:/tmp/uwsgi/
      - web_static:/var/www/mysite/assets/:rw
#    depends_on:
#      - postgres
#####
#  Uncomment this if you want a local postgres db in production
#####
#  postgres:
#    container_name: andrewbbs-postgres-prod
#    image: postgres:15
#    env_file:
#      - ./.envs/production/.env
#    restart: always
#    volumes:
#      - postgres_data_prod:/var/lib/postgresql/data/
#    ports:
#      - "5432:5432"